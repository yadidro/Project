{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./welcome/welcome.component\";\nimport * as i3 from \"./header/header.component\";\nexport class AppComponent {\n  constructor(http) {\n    this.title = 'ClientSide';\n    http.get('/weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\")(1, \"app-welcome\");\n      }\n    },\n    dependencies: [i2.WelcomeComponent, i3.HeaderComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAYC,IAAgB;IAM5B,UAAK,GAAG,YAAY;IALlBA,IAAI,CAACC,GAAG,CAAoB,kBAAkB,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACjE,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAAC;qBAPUP,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAS;IAAAC;IAAAC;IAAAC;MAAA;QCgBzBC,6BAAyB","names":["AppComponent","constructor","http","get","subscribe","result","forecasts","error","console","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\roy.yadid@sap.com\\source\\repos\\QuestionnaireProject\\ClientSide\\src\\app\\app.component.ts","C:\\Users\\roy.yadid@sap.com\\source\\repos\\QuestionnaireProject\\ClientSide\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\r\n  public forecasts?: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient) {\r\n    http.get<WeatherForecast[]>('/weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n\n  title = 'ClientSide';\n}\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}","<!-- <h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationangular\">https://aka.ms/jspsintegrationangular</a> for more details.</em></p>\r\n\r\n<table *ngIf=\"forecasts\">\r\n    <thead>\r\n        <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let forecast of forecasts\">\r\n            <td>{{ forecast.date }}</td>\r\n            <td>{{ forecast.temperatureC }}</td>\r\n            <td>{{ forecast.temperatureF }}</td>\r\n            <td>{{ forecast.summary }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table> -->\r\n<app-header></app-header>\r\n<app-welcome></app-welcome>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}